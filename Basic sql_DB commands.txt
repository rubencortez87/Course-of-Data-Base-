Commands more importan on DB


1: CREATE queries are used to create a new database or table.

CREATE TABLE table_name (
  column_1 datatype_1);

2: ALTER queries are used to modify the structure of a database or a table such as adding a new column, change the data type, drop, or rename an existing column, etc.

ALTER TABLE table_name 
ADD column_name datatype;

3:DROP queries are used to delete a database or table. 

DROP TABLE table_name;

4:TRUNCATE queries are used to clean the table, remove all the existing records, but not the table itself.

TRUNCATE TABLE table_name;

5:SELECT … FROM … is the most basic and commonly used query in SQL.

6:To see data of an entire table:
SELECT * FROM table_name;

7:To see data in some specific columns:
SELECT column_name(s) FROM table_name;

8:To see data from your table based on some conditions, this is the case for WHERE to be used:
SELECT column_name(s)
FROM table_name
WHERE condition(s);

9:INSERT INTO queries are used to insert one or more rows of data (new records) into an existing table.

INSERT INTO table_name (column_1, column_2, column_3, ...)
VALUES (value_1, value_2, value_3, ...);

10:UPDATE queries are used to modify an existing table and update it with new data based on some conditions.

UPDATE table_name
SET column_1 = value_1, column_2 = value_2, ...
WHERE condition;

11:DELETE FROM queries are used to remove the records from a table based on some conditions.

DELETE FROM table_name
WHERE condition;

12:You can use AS to rename a column or table temporarily using an alias on the result view.
SELECT column_name AS 'Alias'
FROM table_name;

13:The BETWEEN operator is used to select the value within a certain range.
SELECT column_name(s)
FROM table_name
WHERE column_name BETWEEN value_1 AND value_2;

14:GROUP BY is a clause in SQL that is only used with aggregate functions (COUNT, MAX, MIN, SUM, AVG). It is used in collaboration with the SELECT statement to arrange identical data into groups.
SELECT column_name, COUNT(*)
FROM table_name
GROUP BY column_name;

15:HAVING is used to replace WHERE to work with aggregate functions. WHERE clause introduces a condition on individual rows; HAVING clause introduces a condition on aggregations.
HAVING is typically used with GROUP BY.
SELECT column_name, COUNT(*)
FROM table_name
GROUP BY column_name
HAVING COUNT(*) > value;

16:IS NULL and IS NOT NULL are used to test whether a column value is empty or not.
SELECT column_name(s)
FROM table_name
WHERE column_name IS NULL;

17:LIMIT  specify the maximum number of records you want to show in a result set.
SELECT *
FROM table_name
LIMIT number;

18:OUTER JOIN will combine rows from different tables even if the join condition is not met. Every row in the left table is returned in the result set
SELECT column_name(s)
FROM table_1
LEFT JOIN table_2
  ON table_1.column_name = table_2.column_name;

19:INNER JOIN will combine rows from different tables if the join condition is true.
SELECT column_name(s)
FROM table_1
JOIN table_2
  ON table_1.column_name = table_2.column_name;

